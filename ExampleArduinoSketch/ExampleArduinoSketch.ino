/* Image data for happy.bmp 123x120 */
/* Generated by MonochromeBMP2Array */
/* Source code available at https://github.com/Krugaroo/MonochromeBMP2Array  */
/*
***************************************************************************************************************************     
***************************************************************************************************************************     
***************************************************************************************************************************     
********************************************* *****************************************************************************     
******************************************** **********************************    ****************************************     
******************************************** **********************************    ****************************************     
******************************************  *  *******************************  **   **************     *******************     
****************************************  ****   *********************** ***** *****               * **********************     
*****************         ************  *******  **********************  ****  *********** ********        ****************     
*******************    ***      ***   *********   ************** ****   ****  *****************************    ************     
***********************  *******   ********** *   ************** ***    ****  ** ******************************  **********     
**************           ********************* **  ************  **  ** **   *** ******************************** *********     
***********    ******************************* **   ********    **   *  **   *** *****************************       ******     
**********  ********************************** ***  *******     *   **  *    *** *****************************  ***********     
************   ******************************* ***   *****     *   ***      **** ****************************** ***********     
************** ******************************* ****   **          ****    ****** ******************************* **********     
************** ******************************* ****   **          ****    ****** ******************************* **********     
************* ******************************** *****      *      *****    ****** ******************************* **********     
************* *******************************  *****     **     ****** * ******* ******************************* **********     
************* *******************************  *******   **    ********* ******** ******************************* *********     
*********************************************  ********  **    ****************** ******************************* *********     
************ ********************************  ********************************** ******************************* *********     
************ ******************************** *********************************** ******************************  *********     
************ ******************************** **************   ******************  ****************************** *********     
************ ******************************** **************   ******************* *****************************  *********     
************ ******************************** *************    ***** *************  ****************************  *********     
************  ******************************* *************    **** **************  ****************************  *********     
************  ******************************* *************    **** **************  ****************************  *********     
************* ******************************  *************    *** ***************   *************************** **********     
************* ****************************** *************     ** *****************  *************************** **********     
************* *****************************  ************* *   * ******************  **************************  **********     
************* ***************************** ************** *    ******************** **************************  **********     
******************************************* ************* **    ********************  *************************  **********     
************** ****************************************** ***************************  ************************* **********     
************** *************************** ************** ***************************   ************************ **********     
************** ************************** *************** ***************************   ************************ **********     
************** *************************  *************** ***************************   ************************ **********     
************** ************************  ***************** *************************      ********************** **********     
************** ************************  ***************** *************************      ********************** **********     
************** ************************  ***************** ************************ **    ********************** **********     
************** ***********************  *  *   ************ ********************** ***     *********************  *********     
************** **********************   *** **   ********** ****************** ** ****     *********************  *********     
************** *********************    *******   * ********************* *** ** *****      ********************  *********     
************** *********************    ********* ** ******************** *** ** ****       ********************  *********     
************** ********************     *  ********* ******************** ** *****          ********************  *********     
************** ********************           ******* * **************** *  *****   ***     ********************  *********     
**************  *****************     **  **   ****** * ******************  ****   * *       *******************  *********     
**************  *****************    *       *   **** ** **********************  *     **** *******************  **********     
**************  *****************           *     ***************************** *      **** ************ ****** ***********     
**************  *****************           *     ***************************** *      **** ************ ****** ***********     
**************   ****************   *      *       ****** ********************  *   *  **** ************ ***** ************     
**************   ****************   *      *  **** *************************** *       **** ********     ****  ************     
***************   *****  ********  *       * ***** **************************  *     *      ********     ****  ************     
***************    ****   *******  *          **** **************************        *      *******      ***  *************     
***************   *   *    ******  *********  ****  *************************  *********    *****        **   *************     
***************             *****  **********       *************************  ***********  ****         **   *************     
***************       *      ****  ***********      ********************* ***  *********** ****    *    **    *************     
***************  *       *    ***  ************     * ******************* **** *********** ***    ***   *     *************     
***************  *****    *     *  ************     * **** *************  **** **  *****   *     ****     **  *************     
***************  ******   ***       ***********    *** *** *************  ****      ****        ****     ***  *************     
***************  ******   ***       ***********    *** *** *************  ****      ****        ****     ***  *************     
**************   *******   **       *************  **  *** *          *   ***** *** ****       *****    ****   ************     
**************   ********  ***      **    *******  ** * *   ************    *** *** *******   ****** *****      ***********     
**************   **************  **   *** *****    * * *******************   *** * *******   ****** ********    ***********     
*************     ************** ***  *** *****   **  ******          ************ *****    *****************    **********     
************   **  **************  **  *  *      ** ******* *************************      *************          *********     
***********  ***************************   *********************************************   ********************   *********     
********** **************************** *************************************************************************  ********     
*********        ******************************************            *******************************************   ******     
********   *********************************************   ***********   ******************************************   *****     
********  *********************************************  **************** *******************************************  ****     
********  *********************************************  **************** *******************************************  ****     
******** *********************** ********************* ******************   *****************************************  ****     
******  *********************************************  *******************  ******************************************  ***     
*****   *********************** *********************  *******************  ******************************************  ***     
***** ***********************************************  *******************  *******************************************  **     
**** ************************* *********************** *******************  ******************* *******************   *  **     
***  ************************* *********************** ****************** *******************************************     *     
*** *   ********************* ************************  ***************** ********************************************    *     
**    ************************************************* **************** *********************** *********************          
**    *********************** ************************** ************** ***********************************************         
*     *************************************************** ************* **** *******************************************  *     
*     *************************************************** ************* **** *******************************************  *     
*  * **** ** ************************************  ******* *********** ************************** **********************  *     
  ** ***  * *********************************************** ********  **************************************************  *     
 ***      **************************************************    ***  *************************************************    *     
****     ******************** *********************************     ***************************************************         
****     *******************************************************  *****************************************************         
****     *******************************************************   ************* ****   ******** **********************         
****     **** ***************  ************************  *******   **  ********* ****** *******************************  *      
****  ** **** ************************** *****   ***************   *******************    *****************************  **     
****      *** **************** *********  **********************   ******************* *  ***** ***********************  **     
***** **  *****************************    ********************     ***************** ********************************   **     
***** **  *****************************    ********************     ***************** ********************************   **     
***** **  ********************* ******* ** *****************        ***************  *********************************  ***     
********  **** ****************************  **************          ************  ***********  **********************  ***     
********  ***********************************  **********              ********   ****************************** * **  ****     
********  ***************************************   *    ***     ******        *************** *******************     ****     
*********  ** *************************************     ******* *********     ************** ********************     *****     
*********  **  **************************************  ******** **********    *********************************** *   *****     
**********  * * *************************************  ******** **********   ***********************************  *  ******     
***********   *  * *******************   ************ ********* **********   ********************************* * **********     
***********   **  **** *****************  *********** ********* **********   ***********    *****************    **********     
************  ****    *    **************  ********** ******   ***********  ***********   *****************     ***********     
************  ****    *    **************  ********** ******   ***********  ***********   *****************     ***********     
*************  ****    *    *********** **   ******** ******   ***********  *********   *****************      ************     
************** *******  ***    ******      *  ******  ******   ***********  ********      ********       **  **************     
************************  ***           *****  *****  ********* **********  *******  ***            ****** ****************     
**********************************************   ***  ********* **********  ***** *****************************************     
************************************************* *** ********* ********* ***** *******************************************     
**************************************************    ******************* **** ********************************************     
***************************************************   *******************     *********************************************     
***************************************************** ******************    ***********************************************     
*****************************************************  ****************  **************************************************     
****************************************************** ****************  **************************************************     
****************************************************** ****************  **************************************************     
******************************************************  **************  ***************************************************     
*******************************************************   **********  *****************************************************     
********************************************************             ******************************************************     
**********************************************************          *******************************************************     
*/

/* Image data */
unsigned int ImgWidthBytes = 16;
unsigned int ImgWidthPixels = 123;
unsigned int ImgHeightPixels = 120;
unsigned int ImgTotalBytes = 1920;

const char ImgArray[] PROGMEM = {
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFB,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFE,0x1F,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFE,0x1F,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xC9,0xFF,0xFF,0xFF,0xFC,0xC7,0xFF,0xE0,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0x3C,0x7F,0xFF,0xFF,0x7D,0xF0,0x00,0x17,0xFF,0xFF,0xE0,
0xFF,0xFF,0x80,0x3F,0xFC,0xFE,0x7F,0xFF,0xFE,0x79,0xFF,0xDF,0xE0,0x1F,0xFF,0xE0,
0xFF,0xFF,0xE1,0xC0,0xE3,0xFE,0x3F,0xFF,0x78,0xF3,0xFF,0xFF,0xFF,0xE1,0xFF,0xE0,
0xFF,0xFF,0xFE,0x7F,0x1F,0xFA,0x3F,0xFF,0x70,0xF3,0x7F,0xFF,0xFF,0xFE,0x7F,0xE0,
0xFF,0xFC,0x00,0x7F,0xFF,0xFD,0x9F,0xFE,0x66,0xC7,0x7F,0xFF,0xFF,0xFF,0xBF,0xE0,
0xFF,0xE1,0xFF,0xFF,0xFF,0xFD,0x8F,0xF0,0xC4,0xC7,0x7F,0xFF,0xFF,0xFC,0x07,0xE0,
0xFF,0xCF,0xFF,0xFF,0xFF,0xFD,0xCF,0xE0,0x8C,0x87,0x7F,0xFF,0xFF,0xFC,0xFF,0xE0,
0xFF,0xF1,0xFF,0xFF,0xFF,0xFD,0xC7,0xC1,0x1C,0x0F,0x7F,0xFF,0xFF,0xFE,0xFF,0xE0,
0xFF,0xFD,0xFF,0xFF,0xFF,0xFD,0xE3,0x00,0x3C,0x3F,0x7F,0xFF,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xFF,0xFD,0xE3,0x00,0x3C,0x3F,0x7F,0xFF,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFB,0xFF,0xFF,0xFF,0xFD,0xF0,0x20,0x7C,0x3F,0x7F,0xFF,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFB,0xFF,0xFF,0xFF,0xF9,0xF0,0x60,0xFD,0x7F,0x7F,0xFF,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFB,0xFF,0xFF,0xFF,0xF9,0xFC,0x61,0xFF,0x7F,0xBF,0xFF,0xFF,0xFF,0xBF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xF9,0xFE,0x61,0xFF,0xFF,0xBF,0xFF,0xFF,0xFF,0xBF,0xE0,
0xFF,0xF7,0xFF,0xFF,0xFF,0xF9,0xFF,0xFF,0xFF,0xFF,0xBF,0xFF,0xFF,0xFF,0xBF,0xE0,
0xFF,0xF7,0xFF,0xFF,0xFF,0xFB,0xFF,0xFF,0xFF,0xFF,0xBF,0xFF,0xFF,0xFF,0x3F,0xE0,
0xFF,0xF7,0xFF,0xFF,0xFF,0xFB,0xFF,0xF1,0xFF,0xFF,0x9F,0xFF,0xFF,0xFF,0xBF,0xE0,
0xFF,0xF7,0xFF,0xFF,0xFF,0xFB,0xFF,0xF1,0xFF,0xFF,0xDF,0xFF,0xFF,0xFF,0x3F,0xE0,
0xFF,0xF7,0xFF,0xFF,0xFF,0xFB,0xFF,0xE1,0xF7,0xFF,0xCF,0xFF,0xFF,0xFF,0x3F,0xE0,
0xFF,0xF3,0xFF,0xFF,0xFF,0xFB,0xFF,0xE1,0xEF,0xFF,0xCF,0xFF,0xFF,0xFF,0x3F,0xE0,
0xFF,0xF3,0xFF,0xFF,0xFF,0xFB,0xFF,0xE1,0xEF,0xFF,0xCF,0xFF,0xFF,0xFF,0x3F,0xE0,
0xFF,0xFB,0xFF,0xFF,0xFF,0xF3,0xFF,0xE1,0xDF,0xFF,0xC7,0xFF,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFB,0xFF,0xFF,0xFF,0xF7,0xFF,0xC1,0xBF,0xFF,0xE7,0xFF,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFB,0xFF,0xFF,0xFF,0xE7,0xFF,0xD1,0x7F,0xFF,0xE7,0xFF,0xFF,0xFE,0x7F,0xE0,
0xFF,0xFB,0xFF,0xFF,0xFF,0xEF,0xFF,0xD0,0xFF,0xFF,0xF7,0xFF,0xFF,0xFE,0x7F,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xEF,0xFF,0xB0,0xFF,0xFF,0xF3,0xFF,0xFF,0xFE,0x7F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0xFF,0xFF,0xF9,0xFF,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xFF,0xDF,0xFF,0xBF,0xFF,0xFF,0xF8,0xFF,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xFF,0xBF,0xFF,0xBF,0xFF,0xFF,0xF8,0xFF,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xFF,0x3F,0xFF,0xBF,0xFF,0xFF,0xF8,0xFF,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xFE,0x7F,0xFF,0xDF,0xFF,0xFF,0xF0,0x3F,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xFE,0x7F,0xFF,0xDF,0xFF,0xFF,0xF0,0x3F,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xFE,0x7F,0xFF,0xDF,0xFF,0xFF,0xEC,0x3F,0xFF,0xFF,0x7F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xFC,0x91,0xFF,0xEF,0xFF,0xFF,0xDC,0x1F,0xFF,0xFF,0x3F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xF8,0xEC,0x7F,0xEF,0xFF,0xFD,0xBC,0x1F,0xFF,0xFF,0x3F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xF0,0xFE,0x2F,0xFF,0xFF,0xBB,0x7C,0x0F,0xFF,0xFF,0x3F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xF0,0xFF,0xB7,0xFF,0xFF,0xBB,0x78,0x0F,0xFF,0xFF,0x3F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xE0,0x9F,0xF7,0xFF,0xFF,0xB7,0xC0,0x0F,0xFF,0xFF,0x3F,0xE0,
0xFF,0xFD,0xFF,0xFF,0xE0,0x03,0xFA,0xFF,0xFF,0x4F,0x8E,0x0F,0xFF,0xFF,0x3F,0xE0,
0xFF,0xFC,0xFF,0xFF,0x83,0x31,0xFA,0xFF,0xFF,0xCF,0x14,0x07,0xFF,0xFF,0x3F,0xE0,
0xFF,0xFC,0xFF,0xFF,0x84,0x04,0x7B,0x7F,0xFF,0xFE,0x41,0xEF,0xFF,0xFE,0x7F,0xE0,
0xFF,0xFC,0xFF,0xFF,0x80,0x08,0x3F,0xFF,0xFF,0xFE,0x81,0xEF,0xFF,0x7E,0xFF,0xE0,
0xFF,0xFC,0xFF,0xFF,0x80,0x08,0x3F,0xFF,0xFF,0xFE,0x81,0xEF,0xFF,0x7E,0xFF,0xE0,
0xFF,0xFC,0x7F,0xFF,0x88,0x10,0x1F,0xBF,0xFF,0xFC,0x89,0xEF,0xFF,0x7D,0xFF,0xE0,
0xFF,0xFC,0x7F,0xFF,0x88,0x13,0xDF,0xFF,0xFF,0xFD,0x01,0xEF,0xF0,0x79,0xFF,0xE0,
0xFF,0xFE,0x3E,0x7F,0x90,0x17,0xDF,0xFF,0xFF,0xF9,0x04,0x0F,0xF0,0x79,0xFF,0xE0,
0xFF,0xFE,0x1E,0x3F,0x90,0x03,0xDF,0xFF,0xFF,0xF8,0x04,0x0F,0xE0,0x73,0xFF,0xE0,
0xFF,0xFE,0x22,0x1F,0x9F,0xF3,0xCF,0xFF,0xFF,0xF9,0xFF,0x0F,0x80,0x63,0xFF,0xE0,
0xFF,0xFE,0x00,0x0F,0x9F,0xF8,0x0F,0xFF,0xFF,0xF9,0xFF,0xCF,0x00,0x63,0xFF,0xE0,
0xFF,0xFE,0x02,0x07,0x9F,0xFC,0x0F,0xFF,0xFF,0xB9,0xFF,0xDE,0x10,0xC3,0xFF,0xE0,
0xFF,0xFE,0x40,0x43,0x9F,0xFE,0x0B,0xFF,0xFF,0xBD,0xFF,0xDC,0x38,0x83,0xFF,0xE0,
0xFF,0xFE,0x7C,0x20,0x9F,0xFE,0x0B,0xDF,0xFF,0x3D,0x9F,0x10,0x78,0x33,0xFF,0xE0,
0xFF,0xFE,0x7E,0x38,0x0F,0xFE,0x1D,0xDF,0xFF,0x3C,0x0F,0x00,0xF0,0x73,0xFF,0xE0,
0xFF,0xFE,0x7E,0x38,0x0F,0xFE,0x1D,0xDF,0xFF,0x3C,0x0F,0x00,0xF0,0x73,0xFF,0xE0,
0xFF,0xFC,0x7F,0x18,0x0F,0xFF,0x99,0xD0,0x02,0x3E,0xEF,0x01,0xF0,0xF1,0xFF,0xE0,
0xFF,0xFC,0x7F,0x9C,0x0C,0x3F,0x9A,0x8F,0xFF,0x0E,0xEF,0xE3,0xF7,0xC0,0xFF,0xE0,
0xFF,0xFC,0x7F,0xFE,0x63,0xBE,0x15,0xFF,0xFF,0xC7,0x5F,0xC7,0xEF,0xF0,0xFF,0xE0,
0xFF,0xF8,0x3F,0xFF,0x73,0xBE,0x33,0xF0,0x03,0xFF,0xDF,0x0F,0xFF,0xF8,0x7F,0xE0,
0xFF,0xF1,0x9F,0xFF,0x99,0x20,0x6F,0xEF,0xFF,0xFF,0xF8,0x1F,0xFF,0x00,0x3F,0xE0,
0xFF,0xE7,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFE,0x3F,0xE0,
0xFF,0xDF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x9F,0xE0,
0xFF,0x80,0x7F,0xFF,0xFF,0xFF,0xFF,0xE0,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xC7,0xE0,
0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0x7F,0xFF,0xFF,0xFF,0xFF,0xE3,0xE0,
0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xFF,0xBF,0xFF,0xFF,0xFF,0xFF,0xF9,0xE0,
0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xFF,0xBF,0xFF,0xFF,0xFF,0xFF,0xF9,0xE0,
0xFF,0x7F,0xFF,0xFF,0x7F,0xFF,0xFD,0xFF,0xFF,0x8F,0xFF,0xFF,0xFF,0xFF,0xF9,0xE0,
0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xF9,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xFF,0xFC,0xE0,
0xF8,0xFF,0xFF,0xFE,0xFF,0xFF,0xF9,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xFF,0xFC,0xE0,
0xFB,0xFF,0xFF,0xFF,0xFF,0xFF,0xF9,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xFF,0xFE,0x60,
0xF7,0xFF,0xFF,0xFD,0xFF,0xFF,0xFD,0xFF,0xFF,0xCF,0xFF,0xFE,0xFF,0xFF,0xE2,0x60,
0xE7,0xFF,0xFF,0xFD,0xFF,0xFF,0xFD,0xFF,0xFF,0xBF,0xFF,0xFF,0xFF,0xFF,0xF8,0x20,
0xE8,0xFF,0xFF,0xFB,0xFF,0xFF,0xFC,0xFF,0xFF,0xBF,0xFF,0xFF,0xFF,0xFF,0xFC,0x20,
0xC3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0x7F,0xFF,0xFF,0x7F,0xFF,0xFC,0x00,
0xC3,0xFF,0xFF,0xFB,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,
0x83,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0xFE,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0x20,
0x83,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0xFE,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0x20,
0x97,0xB7,0xFF,0xFF,0xFF,0xFF,0x9F,0xDF,0xFD,0xFF,0xFF,0xFF,0xBF,0xFF,0xFF,0x20,
0x37,0x2F,0xFF,0xFF,0xFF,0xFF,0xFF,0xEF,0xF3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x20,
0x70,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xE7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x20,
0xF0,0x7F,0xFF,0xFB,0xFF,0xFF,0xFF,0xFE,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,
0xF0,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,
0xF0,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0x78,0xFF,0x7F,0xFF,0xFE,0x00,
0xF0,0x7B,0xFF,0xF9,0xFF,0xFF,0xFE,0x7F,0x19,0xFF,0x7E,0xFF,0xFF,0xFF,0xFE,0x40,
0xF3,0x7B,0xFF,0xFF,0xFF,0x7C,0x7F,0xFF,0x1F,0xFF,0xFC,0x3F,0xFF,0xFF,0xFE,0x60,
0xF0,0x3B,0xFF,0xFD,0xFF,0x3F,0xFF,0xFF,0x1F,0xFF,0xFD,0x3E,0xFF,0xFF,0xFE,0x60,
0xFB,0x3F,0xFF,0xFF,0xFE,0x1F,0xFF,0xFE,0x0F,0xFF,0xFB,0xFF,0xFF,0xFF,0xFC,0x60,
0xFB,0x3F,0xFF,0xFF,0xFE,0x1F,0xFF,0xFE,0x0F,0xFF,0xFB,0xFF,0xFF,0xFF,0xFC,0x60,
0xFB,0x3F,0xFF,0xFE,0xFE,0xDF,0xFF,0xF0,0x0F,0xFF,0xE7,0xFF,0xFF,0xFF,0xFC,0xE0,
0xFF,0x3D,0xFF,0xFF,0xFF,0xE7,0xFF,0xE0,0x07,0xFF,0x9F,0xFC,0xFF,0xFF,0xFC,0xE0,
0xFF,0x3F,0xFF,0xFF,0xFF,0xF9,0xFF,0x80,0x01,0xFE,0x3F,0xFF,0xFF,0xFF,0x59,0xE0,
0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0x88,0x70,0x7E,0x01,0xFF,0xFD,0xFF,0xFF,0xC1,0xE0,
0xFF,0x9B,0xFF,0xFF,0xFF,0xFF,0xE0,0xFE,0xFF,0x83,0xFF,0xF7,0xFF,0xFF,0x83,0xE0,
0xFF,0x99,0xFF,0xFF,0xFF,0xFF,0xF9,0xFE,0xFF,0xC3,0xFF,0xFF,0xFF,0xFF,0xA3,0xE0,
0xFF,0xCA,0xFF,0xFF,0xFF,0xFF,0xF9,0xFE,0xFF,0xC7,0xFF,0xFF,0xFF,0xFF,0x27,0xE0,
0xFF,0xE2,0x5F,0xFF,0xFC,0x7F,0xFB,0xFE,0xFF,0xC7,0xFF,0xFF,0xFF,0xFD,0x7F,0xE0,
0xFF,0xE3,0x3D,0xFF,0xFF,0x3F,0xFB,0xFE,0xFF,0xC7,0xFF,0x0F,0xFF,0xF8,0x7F,0xE0,
0xFF,0xF3,0xC2,0x1F,0xFF,0x9F,0xFB,0xF1,0xFF,0xCF,0xFE,0x3F,0xFF,0xE0,0xFF,0xE0,
0xFF,0xF3,0xC2,0x1F,0xFF,0x9F,0xFB,0xF1,0xFF,0xCF,0xFE,0x3F,0xFF,0xE0,0xFF,0xE0,
0xFF,0xF9,0xE1,0x0F,0xFE,0xC7,0xFB,0xF1,0xFF,0xCF,0xF8,0xFF,0xFF,0x81,0xFF,0xE0,
0xFF,0xFD,0xFC,0xE1,0xF8,0x13,0xF3,0xF1,0xFF,0xCF,0xF0,0x3F,0xC0,0x67,0xFF,0xE0,
0xFF,0xFF,0xFF,0x38,0x00,0xF9,0xF3,0xFE,0xFF,0xCF,0xE7,0x00,0x0F,0xDF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x73,0xFE,0xFF,0xCF,0xBF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBB,0xFE,0xFF,0xBE,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC3,0xFF,0xFF,0xBD,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xFF,0xFF,0x83,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFB,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF9,0xFF,0xFE,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0xFF,0xFE,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0xFF,0xFE,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFF,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x3F,0xF3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
};

#include <Adafruit_GFX.h>    // Core graphics library
#include <Adafruit_TFTLCD.h> // Hardware-specific library

#define  BLACK   0x0000
#define WHITE   0xFFFF

Adafruit_TFTLCD tft(A0, A1, A2, A3, A4);

void setup() {
  // put your setup code here, to run once:
  tft.reset();

  Serial.begin(9600);

  uint16_t identifier = tft.readID();
  
  tft.begin(identifier);
  
  tft.fillScreen(WHITE);
  
  draw_Image(ImgArray);

}

void loop() {
  // put your main code here, to run repeatedly:

}

void draw_Image(const char *inImg)
{
  tft.fillRect(0,0,120,120,WHITE);

  int x=0;
  int y=0;

  /* Loop through rows */
  for(int i=0;i<ImgHeightPixels;i++)
  {
    /* loop through bytes of collumn */
    for(int j=0;j<ImgWidthBytes;j++)
    {
      unsigned char pixelData =  pgm_read_byte_near(inImg + i*ImgWidthBytes + j);

      /* each byte represents 8 pixels except maybe the last. */
      for(int k=1;k<=8;k++)
      {
        /* if last byte in row and there are bits in byte not representing pixels (padding) stop parsing collumn when these bits are reached. */
        if(j==ImgWidthBytes-1 && (ImgWidthPixels%8) && (ImgWidthPixels%8)>k)
        {
          break;
        }

        /* read the bit and draw a pixel if its not set*/
        if(!(pixelData&(1<<(8-k))))
        {
          tft.drawPixel(x,y, BLACK);
          Serial.print("*");
        }
        else
        {
          Serial.print(" ");
        }
        x++;
      }      
    }

    Serial.println("");
    x=0;
    y++;
  }
}
